plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'war'
}
bootWar{
    enabled =true
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
//
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    //pdf 박스 라이브러리 추가
    implementation 'org.apache.pdfbox:pdfbox:2.0.29'
    implementation 'org.apache.pdfbox:fontbox:2.0.29'
    implementation 'org.apache.pdfbox:jempbox:1.8.16'

    implementation 'io.jsonwebtoken:jjwt:0.9.1' // JWT 라이브러리 추가

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
    useJUnitPlatform()

}
